/*
 * Stores all information associated with a file in our distributed hash table.
 *
 *  Created on: Mar 13, 2011
 *      Author: Jon
 */

#ifndef FILEDATA_H_
#define FILEDATA_H_

#define BUFFER_SIZE 256

/**
 * Stores all information associated with a file in our distributed hash table.
 *
 * This structure is necessary for local node file maps and for add, delete, or find commands.
 */
struct FileData {

	/**
	 * The name or path of the file.
	 */
	char filename[BUFFER_SIZE];

	/**
	 *  The file hash, used for convenience (so we don't need to recompute the hash value each time)
	 *  	Technically, this isn't the full hash, but we this is the number generated by performing
	 *  	the 2^m modulo operation.
	 */
	int filenameHashData;

	/**
	 *	Used for adding, deleting, and finding a file, represents the file itself. We're storing
	 *		This as a string to keep the content easily usable for hashing.
	 */
	char ipAddress[BUFFER_SIZE];
};


#endif /* FILEDATA_H_ */
